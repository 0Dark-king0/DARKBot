// ุณูุฑูุจุช ูุชูููุฏ 800+ ููุฑุฉ ูุนุจุฉ Godot ููุตูุฉ
const fs = require('fs');

// ููุงูุจ ูุชููุนุฉ
const genres = [
  "2D Platformer", "2D Top-Down Action", "2D Puzzle", "2D Adventure", "2D RPG",
  "2D Tower Defense", "2D Racing", "2D Fighting", "2D Stealth", "2D Survival",
  "2D Metroidvania", "2D Roguelike", "2D Rhythm", "2D Shooter", "2D Strategy",
  "Visual Novel", "Point & Click", "Card Game", "2D Farming Sim", "2D Horror",
  "2D Sports", "2D Arcade", "2D Educational", "2D Simulation", "2D Party Game"
];

const themes = [
  "ุตุญุฑุงุก", "ุบุงุจุฉ", "ูุถุงุก", "ูุฏููุฉ", "ููุนุฉ", "ุฌุฒูุฑุฉ", "ุฌุจุงู", "ูุญูุท", "ููู", "ูุฎุชุจุฑ",
  "ูุฏุฑุณุฉ", "ูุณุชุดูู", "ุณูู", "ูุนุจุฏ", "ุณุฌู", "ูุฒุฑุนุฉ", "ูุฑูุฉ", "ุนุงูู ุณุญุฑู", "ุนุงูู ุงูุฃุญูุงู", "ุงููุณุชูุจู",
  "ุงููุงุถู", "ุนุงูู ุงูุฑูุจูุชุงุช", "ุนุงูู ุงูุญููุงูุงุช", "ุนุงูู ุงูุทุนุงู", "ุนุงูู ุงูููุณููู", "ุงูุจุญุฑ", "ุงูุซูุฌ", "ุงูุจุฑูุงู"
];

const protagonists = [
  "ุทูู ุตุบูุฑ", "ูุงุฑุณ ุดุฌุงุน", "ุณุงุญุฑุฉ", "ุฑูุจูุช", "ุญููุงู ุฃููู", "ุนุงูู", "ูุญูู", "ุทุจุงุฎ", "ููุณููุงุฑ",
  "ุจุทู ุฎุงุฑู", "ูููุฌุง", "ูุฑุตุงู", "ุฑุงุฆุฏ ูุถุงุก", "ูุฒุงุฑุน", "ุตูุงุฏ", "ุญุงุฑุณ", "ุทุงูุจ", "ูุนูู", "ุทุจูุจ"
];

const mechanics = [
  "ููุฒ ูููุตุงุช", "ูุชุงู ุจุงูุณูู", "ุฅุทูุงู ูุงุฑ", "ุญู ุฃูุบุงุฒ", "ุฌูุน ููุงุฑุฏ", "ุตูุงุนุฉ ุฃุฏูุงุช",
  "ุฅุฏุงุฑุฉ ููุงุฑุฏ", "ุจูุงุก ููุงุนุฏ", "ุชุฑุจูุฉ ุญููุงูุงุช", "ุฒุฑุงุนุฉ ูุญุงุตูู", "ุทุจุฎ ูุฌุจุงุช",
  "ูุธุงู ุญูุงุฑ", "ุงุฎุชูุงุฑุงุช ูุตุฉ", "ุชุฎูู ูุชุณูู", "ุณุจุงูุงุช", "ูุชุงู Boss", "ุฌูุน Collectibles",
  "ุชุฑููุงุช ููุฏุฑุงุช", "ุณุญุฑ ูุชุนุงููุฐ", "ุชุฌุงุฑุฉ ูููุงูุถุฉ", "ุงุณุชูุดุงู ุนุงูู ููุชูุญ"
];

const objectives = [
  "ุฅููุงุฐ ุงูุนุงูู ูู ุงูุดุฑ", "ุงูุจุญุซ ุนู ููุฒ ููููุฏ", "ุญู ูุบุฒ ูุฏูู", "ุงุณุชุนุงุฏุฉ ุงูุฐุงูุฑุฉ",
  "ุฅูุฌุงุฏ ุทุฑูู ููุนูุฏุฉ ููุจูุช", "ุฅููุงุฐ ุตุฏูู ูุฎุชุทู", "ุจูุงุก ุฃูุถู ูุฑูุฉ", "ูุฒููุฉ ููู ุงูุดุฑ",
  "ุฌูุน ูู ุงููุทุน ุงูุฃุซุฑูุฉ", "ุงูุชุดุงู ุณุฑ ุงูุนุงุฆูุฉ", "ุฅุซุจุงุช ุงูุจุฑุงุกุฉ", "ุงูููุฒ ุจุงูุจุทููุฉ",
  "ุฅููุงู ูุงุฑุซุฉ ูุดููุฉ", "ุงุณุชูุดุงู ุนุงูู ุฌุฏูุฏ", "ุญู ุณูุณูุฉ ุฌุฑุงุฆู"
];

function rand(arr) {
  return arr[Math.floor(Math.random() * arr.length)];
}

function generateTitle(theme, protagonist) {
  const patterns = [
    `${protagonist} ${theme}`,
    `ูุบุงูุฑุฉ ูู ${theme}`,
    `ุฃุณุฑุงุฑ ${theme}`,
    `ุญุงุฑุณ ${theme}`,
    `ุฑุญูุฉ ${protagonist}`,
    `${theme} ุงูููููุฏ`,
    `${protagonist} ุงูุดุฌุงุน`,
    `ููุฒ ${theme}`,
    `ูุบุฒ ${theme}`,
    `${protagonist} ู${theme}`
  ];
  return rand(patterns);
}

function generateStory(protag, theme, objective) {
  const stories = [
    `${protag} ูุนูุด ุญูุงุฉ ุนุงุฏูุฉ ูู ${theme} ุญุชู ููุชุดู ${objective}. ูุฌุจ ุนููู ุฎูุถ ูุบุงูุฑุฉ ุฎุทูุฑุฉ ูููุฆุฉ ุจุงูุชุญุฏูุงุช ูุงูุฃูุบุงุฒ ูุชุญููู ูุฏูู ูุฅููุงุฐ ูู ูุญุจ.`,
    
    `ูู ${theme} ุงูุจุนูุฏุ ${protag} ููุงุฌู ุชุญุฏูุงู ูุจูุฑุงู: ${objective}. ูุน ูุณุงุนุฏุฉ ุฃุตุฏูุงุก ุฌุฏุฏ ูุฃุฏูุงุช ุณุญุฑูุฉุ ููุทูู ูู ุฑุญูุฉ ููุญููุฉ ูููุฆุฉ ุจุงูููุงุฌุขุช.`,
    
    `${protag} ูุณุชููุธ ูููุงู ููุฌุฏ ${theme} ูุฏ ุชุบูุฑ ุชูุงูุงู. ุงููููุฉ ุงููุญูุฏุฉ ุฃูุงูู: ${objective}. ูู ุฎุทูุฉ ุชูุฑุจู ูู ุงูุญูููุฉ ูุชูุดู ุฃุณุฑุงุฑุงู ูุฏูููุฉ ููุฐ ุฒูู ุจุนูุฏ.`,
    
    `ุนูุฏูุง ููุฏุฏ ุฎุทุฑ ุบุงูุถ ${theme}ุ ${protag} ูู ุงูุฃูู ุงููุญูุฏ. ูููุชู ${objective} ูุจู ููุงุช ุงูุฃูุงู. ุฑุญูุฉ ูููุฆุฉ ุจุงูุนูุจุงุช ูุงููุนุงุฑู ุชูุชุธุฑู.`,
    
    `${protag} ูุญูู ุฏุงุฆูุงู ุจุงููุบุงูุฑุฉุ ูุฃุฎูุฑุงู ุฌุงุกุช ูุฑุตุชู ูู ${theme}. ูุฏูู ${objective}ุ ููู ุงูุทุฑูู ูุญููู ุจุงููุฎุงุทุฑ ูุงูููุงุฌุขุช ุงูุชู ุณุชุบูุฑ ุญูุงุชู ููุฃุจุฏ.`
  ];
  return rand(stories);
}

function generateMechanics(genre) {
  const mechs = [];
  mechs.push(`- ${rand(mechanics)}`);
  mechs.push(`- ${rand(mechanics)}`);
  mechs.push(`- ${rand(mechanics)}`);
  mechs.push(`- ${rand(mechanics)}`);
  
  if (genre.includes('Platformer')) mechs.push('- ููุฒ ูุฒุฏูุฌ ูุญุฑูุฉ ุฏูููุฉ');
  if (genre.includes('RPG')) mechs.push('- ูุธุงู ูุณุชููุงุช ูุฎุจุฑุฉ');
  if (genre.includes('Puzzle')) mechs.push('- ุฃูุบุงุฒ ุจูุฆูุฉ ูุชุฏุฑุฌุฉ ุงูุตุนูุจุฉ');
  if (genre.includes('Action')) mechs.push('- ูุชุงู ุฏููุงูููู ูCombo Attacks');
  
  return mechs.join('\n');
}

function generateImplementation(genre) {
  const base = `**ุงูุฎุทูุฉ 1: ุฅุนุฏุงุฏ ุงููุดุฑูุน**
- ุฅูุดุงุก ูุดุฑูุน Godot 4.5 ุฌุฏูุฏ
- ุถุจุท ุฅุนุฏุงุฏุงุช ุงููุงูุฐุฉ ูุงูุฌุฑุงูููุณ

**ุงูุฎุทูุฉ 2: ุฅูุดุงุก ุงููุดุงูุฏ ุงูุฃุณุงุณูุฉ**
- Player.tscn: CharacterBody2D ููุงุนุจ
- World.tscn: ุงููุณุชูู ุงูุฑุฆูุณู
- Enemy.tscn: ุงูุฃุนุฏุงุก ุงูุฃุณุงุณููู

**ุงูุฎุทูุฉ 3: ุจุฑูุฌุฉ ุงููููุงูููุง ุงูุฃุณุงุณูุฉ**
- Player.gd: ุงูุชุญูู ูุงูุญุฑูุฉ
- ุณูุฑูุจุชุงุช ุงูุฃุนุฏุงุก ูุงูุชูุงุนูุงุช
- ูุธุงู ุงูุตุญุฉ ูุงูุถุฑุฑ

**ุงูุฎุทูุฉ 4: ุจูุงุก ุงููุณุชููุงุช**
- ุชุตููู ูุณุชููุงุช ูุชุฏุฑุฌุฉ ุงูุตุนูุจุฉ
- ุฅุถุงูุฉ Collectibles ูุงูุชุญุฏูุงุช
- ูุธุงู Checkpoints ูุงูุญูุธ

**ุงูุฎุทูุฉ 5: ุงูุตูู ูุงูุชุญุณูู**
- ุฅุถุงูุฉ ุงูููุณููู ูุงููุคุซุฑุงุช ุงูุตูุชูุฉ
- ุชุญุณูู ูุงุฌูุฉ ุงููุณุชุฎุฏู
- ุงุฎุชุจุงุฑ ูููุงุฒูุฉ ุงูุตุนูุจุฉ`;
  
  return base;
}

function generateScenes() {
  return `- Player.tscn
- World.tscn
- Enemy.tscn
- Collectible.tscn
- UI/MainMenu.tscn
- UI/HUD.tscn
- UI/PauseMenu.tscn
- UI/GameOver.tscn`;
}

function generateScripts() {
  return `- Player.gd (ุชุญูู ุงููุงุนุจ)
- Enemy.gd (ุณููู ุงูุฃุนุฏุงุก)
- GameManager.gd (ุฅุฏุงุฑุฉ ุงููุนุจุฉ)
- LevelManager.gd (ุงููุณุชููุงุช)
- UIController.gd (ุงููุงุฌูุฉ)
- SaveSystem.gd (ุงูุญูุธ)`;
}

function generateAssets(theme) {
  return `**ุงูุฑุณููุงุช:**
- player_sprite.png
- ${theme}_tileset.png
- enemies_spritesheet.png
- items_icons.png
- background_layers.png

**ุงูุฃุตูุงุช:**
- jump.wav
- attack.wav
- collect.wav
- bg_music.ogg
- ${theme}_ambience.ogg`;
}

function generateExpansion() {
  const expansions = [
    "ุฅุถุงูุฉ ูุณุชููุงุช ุฅุถุงููุฉ ูููุงุทู ุณุฑูุฉ",
    "ูุธุงู ุฅูุฌุงุฒุงุช ูููุงูุขุช",
    "ูุถุน ุตุนูุจุฉ ุฃุนูู New Game+",
    "ุดุฎุตูุงุช ูุงุจูุฉ ููุนุจ ูุชุนุฏุฏุฉ",
    "ุชุญุฏูุงุช ููููุฉ ูุฃุณุจูุนูุฉ",
    "ูุถุน Multiplayer ูุญูู",
    "Boss Fights ูุชูุฏูุฉ",
    "ูุตุต ุฌุงูุจูุฉ ูุดุฎุตูุงุช NPC"
  ];
  
  return `- ${rand(expansions)}\n- ${rand(expansions)}\n- ${rand(expansions)}`;
}

// ุชูููุฏ ุงูุฃููุงุฑ
const games = [];

// ูุจุฏุฃ ูู ุงูุฃููุงุฑ ุงูููุฌูุฏุฉ (6)
const existingGames = require('./godot_games.json');
games.push(...existingGames);

console.log('๐ฎ ุจุฏุก ุชูููุฏ ุฃููุงุฑ ุงูุฃูุนุงุจ...');

for (let i = games.length; i < 800; i++) {
  const genre = rand(genres);
  const theme = rand(themes);
  const protag = rand(protagonists);
  const obj = rand(objectives);
  
  const game = {
    title: generateTitle(theme, protag),
    genre: genre,
    story: generateStory(protag, theme, obj),
    mechanics: generateMechanics(genre),
    implementation: generateImplementation(genre),
    scenes: generateScenes(),
    scripts: generateScripts(),
    assets: generateAssets(theme),
    expansion: generateExpansion()
  };
  
  games.push(game);
  
  if ((i + 1) % 100 === 0) {
    console.log(`โ ุชู ุชูููุฏ ${i + 1} ููุฑุฉ...`);
  }
}

// ุญูุธ ุงูููู
fs.writeFileSync('godot_games.json', JSON.stringify(games, null, 2));
console.log(`\n๐ ุชู! ุชู ุชูููุฏ ${games.length} ููุฑุฉ ูุนุจุฉ ููุตูุฉ!`);
console.log(`๐ ุญููุธ ูู: godot_games.json`);
